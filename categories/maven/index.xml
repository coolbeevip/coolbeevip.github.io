<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>maven on</title><link>https://coolbeevip.github.io/categories/maven/</link><description>Recent content in maven on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 18 Sep 2022 13:24:14 +0800</lastBuildDate><atom:link href="https://coolbeevip.github.io/categories/maven/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Checkstyle Plugin 检查 Java 代码（风格）质量</title><link>https://coolbeevip.github.io/posts/maven/checkstyle-plugin-for-checking-java-code-quality/</link><pubDate>Sun, 18 Sep 2022 13:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/maven/checkstyle-plugin-for-checking-java-code-quality/</guid><description>本文记录了如何在 Maven 项目中使用 Apache Maven Checkstyle Plugin 检查代码风格质量
一个 Maven 项目 假设我有一个 Maven 项目，这个项目包含若干子模块。根目录的 pom.xml 看起来如下：
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;my&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;my-project&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${revision}&amp;lt;/version&amp;gt; &amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;revision&amp;gt;0.1.0-SNAPSHOT&amp;lt;/revision&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;modules&amp;gt; &amp;lt;module&amp;gt;module-dependencies&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-bar&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-foo&amp;lt;/module&amp;gt; &amp;lt;/modules&amp;gt; &amp;lt;/project&amp;gt; 在根项目 pom.xml 中增加 maven-checkstyle-plugin 插件 增加 maven-checkstyle-plugin 插件
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;my&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;my-project&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${revision}&amp;lt;/version&amp;gt; &amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;maven-checkstyle-plugin.version&amp;gt;3.1.2&amp;lt;/maven-checkstyle-plugin.version&amp;gt; &amp;lt;com.puppycrawl.tools.version&amp;gt;9.3&amp;lt;/com.puppycrawl.tools.version&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;modules&amp;gt; &amp;lt;module&amp;gt;module-dependencies&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-bar&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-foo&amp;lt;/module&amp;gt; &amp;lt;/modules&amp;gt; &amp;lt;build&amp;gt; &amp;lt;pluginManagement&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>在 Maven 项目中使用 PMD Plugin 检查 Java 代码（Java源代码）质量</title><link>https://coolbeevip.github.io/posts/maven/pmd-plugin-for-checking-java-code-quality/</link><pubDate>Sun, 18 Sep 2022 13:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/maven/pmd-plugin-for-checking-java-code-quality/</guid><description>本文记录了如何在 Maven 项目中使用 Apache Maven PMD Plugin 检查代码（Java 代码）质量
一个 Maven 项目 假设我有一个 Maven 项目，这个项目包含若干子模块。根目录的 pom.xml 看起来如下：
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;my&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;my-project&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${revision}&amp;lt;/version&amp;gt; &amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;revision&amp;gt;0.1.0-SNAPSHOT&amp;lt;/revision&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;modules&amp;gt; &amp;lt;module&amp;gt;module-dependencies&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-bar&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-foo&amp;lt;/module&amp;gt; &amp;lt;/modules&amp;gt; &amp;lt;/project&amp;gt; 在根项目 pom.xml 中增加 maven-pmd-plugin 插件 增加 maven-pmd-plugin 插件
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;my&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;my-project&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${revision}&amp;lt;/version&amp;gt; &amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;maven-pmd-plugin.version&amp;gt;3.19.0&amp;lt;/maven-pmd-plugin.version&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;modules&amp;gt; &amp;lt;module&amp;gt;module-dependencies&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-bar&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-foo&amp;lt;/module&amp;gt; &amp;lt;/modules&amp;gt; &amp;lt;build&amp;gt; &amp;lt;pluginManagement&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>在 Maven 项目中使用 Spotbugs Plugin 检查 Java 代码（字节码）质量</title><link>https://coolbeevip.github.io/posts/maven/spotbugs-plugin-for-checking-java-code-quality-copy/</link><pubDate>Sun, 18 Sep 2022 13:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/maven/spotbugs-plugin-for-checking-java-code-quality-copy/</guid><description>本文记录了如何在 Maven 项目中使用 SpotBugs Maven Plugin 检查代码（字节码）质量
一个 Maven 项目 假设我有一个 Maven 项目，这个项目包含若干子模块。根目录的 pom.xml 看起来如下：
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;my&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;my-project&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${revision}&amp;lt;/version&amp;gt; &amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;revision&amp;gt;0.1.0-SNAPSHOT&amp;lt;/revision&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;modules&amp;gt; &amp;lt;module&amp;gt;module-dependencies&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-bar&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-foo&amp;lt;/module&amp;gt; &amp;lt;/modules&amp;gt; &amp;lt;/project&amp;gt; 在根项目 pom.xml 中增加 spotbugs-maven-plugin 插件 增加 spotbugs-maven-plugin 插件
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;my&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;my-project&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${revision}&amp;lt;/version&amp;gt; &amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;spotbugs-maven-plugin.version&amp;gt;4.7.1.1&amp;lt;/spotbugs-maven-plugin.version&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;modules&amp;gt; &amp;lt;module&amp;gt;module-dependencies&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-bar&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-foo&amp;lt;/module&amp;gt; &amp;lt;/modules&amp;gt; &amp;lt;build&amp;gt; &amp;lt;pluginManagement&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;com.</description></item><item><title>How to Publish Your Artifacts to Maven Central</title><link>https://coolbeevip.github.io/posts/maven/how-to-publish-your-artifacts-to-maven-central/</link><pubDate>Sun, 03 Jul 2022 13:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/maven/how-to-publish-your-artifacts-to-maven-central/</guid><description>Sign up for a Sonatype Jira account. https://issues.sonatype.org/
Create a Jira issue for new project hosting，Click here for a sample request.
GitHub Actions secrets OSSRH_USERNAME: Jira username
OSSRH_TOKEN: Jira password
MAVEN_GPG_PASSPHRASE: Encrypted your GPG key master password
mvn --encrypt-password [密钥密码] GPG_SIGNING_KEY: Your GPG key as Base64
# If you don&amp;#39;t know your key ID, search it by e-mail gpg --list-secret-keys &amp;lt;your email address&amp;gt; # Export your key as Base64 gpg --export-secret-keys &amp;lt;your key ID&amp;gt; | base64 Add Profile in your Maven Project &amp;lt;profile&amp;gt; &amp;lt;id&amp;gt;sonatype-oss-release&amp;lt;/id&amp;gt; &amp;lt;build&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>在 Maven 多模块项目中使用 JaCoCo 检查测试覆盖率</title><link>https://coolbeevip.github.io/posts/maven/jacoco-in-maven-multi-module/</link><pubDate>Sun, 03 Jul 2022 13:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/maven/jacoco-in-maven-multi-module/</guid><description>本文记录了如何在 Maven 多模块项目中使用 JaCoCo 生成覆盖率报告并推送到 Sonar 中
一个多模块项目 假设我有一个多模块项目，这个项目包含若干子模块，并且有若干测试用例。根目录的 pom.xml 看起来如下：
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;my&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;my-project&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${revision}&amp;lt;/version&amp;gt; &amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;revision&amp;gt;0.1.0-SNAPSHOT&amp;lt;/revision&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;modules&amp;gt; &amp;lt;module&amp;gt;module-dependencies&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-bar&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-foo&amp;lt;/module&amp;gt; &amp;lt;/modules&amp;gt; &amp;lt;/project&amp;gt; 关于 module-dependencies 模块的作用，可以查看我之前写的MAVEN PROJECTS BEST PRACTICES
在根项目 pom.xml 中增加 jacoco-maven-plugin 插件，并增加 module-coverage 模块 增加 jacoco-maven-plugin 插件
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;my&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;my-project&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${revision}&amp;lt;/version&amp;gt; &amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;jacoco-maven-plugin.version&amp;gt;0.8.6&amp;lt;/jacoco-maven-plugin.version&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;modules&amp;gt; &amp;lt;module&amp;gt;module-dependencies&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-bar&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-foo&amp;lt;/module&amp;gt; &amp;lt;module&amp;gt;module-coverage&amp;lt;/module&amp;gt; &amp;lt;/modules&amp;gt; &amp;lt;build&amp;gt; &amp;lt;pluginManagement&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item></channel></rss>