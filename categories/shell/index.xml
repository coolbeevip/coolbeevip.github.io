<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>shell on</title><link>https://coolbeevip.github.io/categories/shell/</link><description>Recent content in shell on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 19 Apr 2021 13:24:14 +0800</lastBuildDate><atom:link href="https://coolbeevip.github.io/categories/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker Pulling Pushing Batch Shell Script</title><link>https://coolbeevip.github.io/posts/docker-pulling-pushing/</link><pubDate>Mon, 19 Apr 2021 13:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/docker-pulling-pushing/</guid><description>从源镜像仓库批量拉取镜像，并将这些镜像推送到目标镜像仓库的批量脚本
#!/bin/bash ################################################# # 使用方式 # 从源仓库拉取镜像到本机 # sh docker-images-pulling-pushing.sh pull # # 将本机镜像推送到目的仓库 # sh docker-images-pulling-pushing.sh push # # 清理本机的镜像 # sh docker-images-pulling-pushing.sh clean ################################################# # 源仓库地址 DOCKER_REPO_FROM= # 目标仓库地址 DOCKER_REPO_TO=192.168.2.2:8888/ DOCKER_REPO_TO_USER=test DOCKER_REPO_TO_PASS=Test123456 # 镜像定义 DOCKER_IMAGES=() DOCKER_IMAGES+=(postgres:9.6) DOCKER_IMAGES+=(elasticsearch:6.6.2) DOCKER_IMAGES+=(coolbeevip/servicecomb-pack) # 从源仓库地址拉取镜像到本机仓库 function pull(){ echo &amp;#34;Pull images from $DOCKER_REPO_FROM&amp;#34; for image in ${DOCKER_IMAGES[@]}; do docker pull $DOCKER_REPO_FROM$image done } # 本机镜像推送到目的仓库 function push(){ docker login http://$DOCKER_REPO_TO -u $DOCKER_REPO_TO_USER -p $DOCKER_REPO_TO_PASS echo &amp;#34;Push $DOCKER_REPO_FROMto $DOCKER_REPO_TO&amp;#34; for image in ${DOCKER_IMAGES[@]}; do docker image tag $DOCKER_REPO_FROM$image $DOCKER_REPO_TO$image docker push $DOCKER_REPO_TO$image done } # 清理本机拉取后的镜像 function clean(){ echo &amp;#34;Remove images&amp;#34; docker rmi -f $(docker images | grep $DOCKER_REPO_FROM | awk &amp;#39;{print $3}&amp;#39;) docker rmi -f $(docker images | grep $DOCKER_REPO_TO | awk &amp;#39;{print $3}&amp;#39;) } case &amp;#34;${@: -1}&amp;#34; in pull ) pull ;; clean ) clean ;; push ) push ;; esac</description></item></channel></rss>