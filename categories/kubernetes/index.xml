<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kubernetes on</title><link>https://coolbeevip.github.io/categories/kubernetes/</link><description>Recent content in kubernetes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Feb 2022 13:24:14 +0800</lastBuildDate><atom:link href="https://coolbeevip.github.io/categories/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Run Docker without Docker Desktop on macOS</title><link>https://coolbeevip.github.io/posts/kubernetes/run-docker-without-docker-desktop-on-macos/</link><pubDate>Mon, 14 Feb 2022 13:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/kubernetes/run-docker-without-docker-desktop-on-macos/</guid><description>由于 Docker Desktop 修改了授权条款，不再对企业用户免费，所以我们需要啊寻求一种替代品。到目前为止 Minikube 已经成为 Docker Desktop 最简单的替代品。 Minikube 用于在本地环境中运行 Kubernetes 集群，但它也运行了一个可用于运行容器的 Docker 守护进程。如果你不需要使用 Kubernetes ，那么你可以通过 minikube pause 暂停 Kubernetes 相关镜像，从而解决系统资源。
在 macOS 上，Minikube 运行在很多虚拟化技术上，由于ISSUE-6296原因，本例使用 Virtualbox 方式（你需要先安装 Virtualbox）。
卸载 Docker Desktop for macOS 如果你之前安装过 Docker Desktop，那么你需要先卸载它
在 Docker Desktop 菜单中选择 Troubleshoot 并且选择 Uninstall. 删除 /Applications/Docker.app 安装 Docker CLI 因为卸载 Docker Desktop 后将自动卸载 Docker CLI，所以你需要单独安装
$ brew install docker $ brew install docker-compose 提示： 在执行 brew install docker-compose 命令的时候可能得到如下的失败信息，这是因为依赖包下载失败。你可以使用 brew install gdbm 单独下载依赖包，就避免了找不到依赖版本的错误。</description></item><item><title>Kubectl Commands</title><link>https://coolbeevip.github.io/posts/kubernetes/kubectl-commands/</link><pubDate>Sun, 19 Dec 2021 13:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/kubernetes/kubectl-commands/</guid><description>常用 Kubectl 命令
创建命名空间 新建一个名为 nc-namespace.yaml 的 YAML 文件
apiVersion: v1 kind: Namespace metadata: name: nc-namespace 然后运行以下命令创建命名空间
$ kubectl create -f nc-namespace.yaml namespace/nc-namespace created 创建命名空间资源配额文件 新建一个名为 nc-quota.yaml 的 YAML 文件
apiVersion: v1 kind: ResourceQuota metadata: name: nc-quota namespace: nc-namespace spec: hard: pods: &amp;#34;10&amp;#34; requests.cpu: &amp;#34;2&amp;#34; requests.memory: 2Gi limits.cpu: &amp;#34;4&amp;#34; limits.memory: 4Gi 然后运行以下命令创建资源配额
$ kubectl create -f nc-quota.yaml resourcequota/nc-quota created 创建 PV 卷和 PVC 新建一个名为 nc-pv.yaml 的 YAML 文件
apiVersion: v1 kind: PersistentVolume metadata: name: nc-pv-volume namespace: nc-namespace spec: storageClassName: manual capacity: storage: 5Gi accessModes: - ReadWriteOnce hostPath: path: &amp;#34;/mnt/data&amp;#34; --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: nc-pv-claim namespace: nc-namespace spec: storageClassName: manual accessModes: - ReadWriteOnce resources: requests: storage: 5Gi 然后运行以下命令创建卷</description></item></channel></rss>