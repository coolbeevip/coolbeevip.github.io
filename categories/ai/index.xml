<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ai on</title><link>https://coolbeevip.github.io/categories/ai/</link><description>Recent content in Ai on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 03 Apr 2025 20:24:14 +0800</lastBuildDate><atom:link href="https://coolbeevip.github.io/categories/ai/index.xml" rel="self" type="application/rss+xml"/><item><title>CAMEL DatabaseAgent: 使数据查询变得像日常对话一样自然</title><link>https://coolbeevip.github.io/posts/ai/camel-database-agent/</link><pubDate>Thu, 03 Apr 2025 20:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/ai/camel-database-agent/</guid><description>作为一名数据工程师，经常面临这样的挑战：业务分析师需要从数据库中提取信息，但他们并不具备编写SQL的技能。每次他们需要一个新报表或数据视图时，都要依赖技术团队的支持，这种情况既降低了效率，也增加了沟通成本。
今天，我很高兴向大家介绍一个开源工具 CAMEL DatabaseAgent，它能够彻底改变这种工作模式。
什么是CAMEL DatabaseAgent？ CAMEL DatabaseAgent是一个基于CAMEL-AI框架的开源智能体，它能够帮助开发者构建自然语言数据库查询解决方案。简单来说，它允许用户使用自然语言提问，并自动将这些问题转换为准确的SQL查询，然后执行并返回结果。
想象一下，当你的同事问&amp;quot;哪些客户在2009年的消费超过了100美元？&amp;ldquo;时，不需要编写一行代码，系统就能直接给出答案。这正是CAMEL DatabaseAgent所实现的功能。
核心组件 CAMEL DatabaseAgent由三个核心组件组成：
DataQueryInferencePipeline：将数据库模式和样本数据转换为查询的少样本示例（包括问题和对应的SQL）的管道。 DatabaseKnowledge：一个向量数据库，用于存储数据库模式、样本数据和查询的少样本示例。 DatabaseAgent：基于CAMEL框架的智能代理，利用DatabaseKnowledge来回答用户问题。 支持的数据库系统 目前，CAMEL DatabaseAgent支持以下数据库系统：
SQLite MySQL PostgreSQL 并且所有操作都可以在只读模式下进行，确保数据安全。
实际使用体验 我最近在一个音乐分发平台的数据库上测试了这个工具，体验非常棒。它不仅能够准确理解各种复杂的业务问题，还能生成优化的SQL查询并以清晰的表格形式展示结果。
例如，当我问&amp;quot;查找包含超过10首曲目的播放列表名称&amp;quot;时，它立即生成了正确的SQL查询：
更令人印象深刻的是，CAMEL DatabaseAgent还能自动分析你的数据库结构，生成数据库概览和推荐问题，帮助用户更好地了解和利用数据库。
场景一: 统计2009年售出的曲目总数和相应的总销售金额，涉及多表连接和时间范围过滤。 场景二: 按音乐类型分组统计2009年的总收入，需要四个表连接和时间过滤条件。 场景三: 查找销售额最高的艺术家，需要多表连接、分组、排序和结果限制。 场景四: 计算购买过雷鬼音乐的不同客户数量，使用子查询和多表连接来筛选特定音乐类型。 场景五: 计算美国客户占总客户的百分比，使用条件计数和百分比计算。 场景六: 找出支持客户数量最多的员工，通过左连接处理可能没有客户的员工情况。 多语言支持 作为一个国际化的工具，CAMEL DatabaseAgent支持基于多种语言进行训练和交互。你可以用中文、英文、韩文其他语言提问，系统都能理解并给出相应的回答。这对于多语言环境的团队协作非常有价值。
快速上手 想要尝试CAMEL DatabaseAgent非常简单，下载项目并使用内置的 CLI 命令行工具就可以轻松连接到本地的数据库：
git clone git@github.com:coolbeevip/camel-database-agent.git cd camel-database-agent pip install uv ruff mypy uv venv .venv --python=3.10 source .venv/bin/activate uv sync --all-extras # 设置环境变量 export OPENAI_API_KEY=sk-xxx export OPENAI_API_BASE_URL=https://api.</description></item><item><title>Awesome Text to Image Prompts</title><link>https://coolbeevip.github.io/posts/ai/awesome-test2image-prompts/</link><pubDate>Thu, 03 Apr 2025 00:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/ai/awesome-test2image-prompts/</guid><description>Jesse Faden&amp;rsquo;s Double exposure, Midjourney style, merging, blending, overlay double exposure image, Double Exposure style, An exceptional masterpiece by Yukisakura revealing a fantastic double exposure composition of Jesse Faden&amp;rsquo;s (control) silhouette harmoniously intertwined with the visually striking details of a cyberpunk metropolis. While the road&amp;rsquo;s details are outwardly echoing through the fabric of the figure, beautiful tension climbs as the contrasting use of monochrome in the background maintains razor-sharp focus on the remarkable double exposure image.</description></item></channel></rss>