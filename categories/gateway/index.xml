<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gateway on</title><link>https://coolbeevip.github.io/categories/gateway/</link><description>Recent content in gateway on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 21 May 2021 01:00:00 +0800</lastBuildDate><atom:link href="https://coolbeevip.github.io/categories/gateway/index.xml" rel="self" type="application/rss+xml"/><item><title>APISIX Study Notes (1) Build &amp; QuickStart</title><link>https://coolbeevip.github.io/posts/study-notes-for-apisix-1-quickstart/</link><pubDate>Fri, 21 May 2021 01:00:00 +0800</pubDate><guid>https://coolbeevip.github.io/posts/study-notes-for-apisix-1-quickstart/</guid><description>安装 在 macOS 基于源代码自己编译发布版本
安装 Etcd 启动 apisix-etcd.yml
version: &amp;#39;3.2&amp;#39; services: etcd-1: image: docker.io/bitnami/etcd:3.4.16 hostname: etcd container_name: apisix-etcd ports: - &amp;#39;2380:2380&amp;#39; - &amp;#39;2379:2379&amp;#39; environment: - ALLOW_NONE_AUTHENTICATION=yes - ETCD_NAME=etcd-1 - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380 - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379 - ETCD_ADVERTISE_CLIENT_URLS=http://0.0.0.0:2379 volumes: - ./volume/apisix/etcd/data:/bitnami/etcd/data - ./volume/apisix/etcd/conf:/opt/bitnami/etcd/conf docker-compose -f docker-compose-apisix-etcd.yml up -d 验证 $ curl -L http://127.0.0.1:2379/health {&amp;#34;health&amp;#34;:&amp;#34;true&amp;#34;} 安装编译环境 安装 Node 10.23.0+ $ node -v v12.18.3 安装 Yarn $ npm install -g yarn $ yarn -v 1.</description></item><item><title>APISIX Study Notes (2) Plugins Traffic Split</title><link>https://coolbeevip.github.io/posts/study-notes-for-apisix-2-plugins-traffic-split/</link><pubDate>Fri, 21 May 2021 01:00:00 +0800</pubDate><guid>https://coolbeevip.github.io/posts/study-notes-for-apisix-2-plugins-traffic-split/</guid><description>场景描述 我有两个 UPSTREAM 服务:
UPSTREAM 1 $ curl -i -X GET http://192.168.51.234:5005/nc-tools/actuator/health HTTP/1.1 200 OK Connection: keep-alive Transfer-Encoding: chunked Content-Type: application/vnd.spring-boot.actuator.v3+json Date: Sat, 22 May 2021 09:09:29 GMT {&amp;#34;status&amp;#34;:&amp;#34;UP&amp;#34;,&amp;#34;components&amp;#34;:{...}} UPSTREAM 2 $ curl -i -X GET http://10.19.88.60:5005/nc-tools/actuator/health HTTP/1.1 200 OK Connection: keep-alive Transfer-Encoding: chunked Content-Type: application/vnd.spring-boot.actuator.v3+json Date: Sat, 22 May 2021 09:08:12 GMT {&amp;#34;status&amp;#34;:&amp;#34;UP&amp;#34;,&amp;#34;components&amp;#34;:{...}} 我希望通过 APISIX 将请求流量路由到两个不同的 UPSTREAM 服务上，参考插件 traffic-split 的样例，可以实现此功能
配置路由 &amp;amp; traffic-split 本例中并没有单独定义 UPSTREAM，而是在 traffic-split 中直接定义了 UPSTREAM 的地址</description></item><item><title>APISIX Study Notes (3) Install with Docker</title><link>https://coolbeevip.github.io/posts/study-notes-for-apisix-3-install-with-docker/</link><pubDate>Fri, 21 May 2021 01:00:00 +0800</pubDate><guid>https://coolbeevip.github.io/posts/study-notes-for-apisix-3-install-with-docker/</guid><description>使用 Docker 启动
定义卷目录 APISIX 目前好像还不支持通过环境变量配置参数，所以需要在宿主机上创建配置文件，并在启动 Docker 时通过 Volume 映射进容器
规划外部卷目录
mkdir apisix_home mkdir -p apisix_home/apisix_volume/apisix/apisix_conf mkdir -p apisix_home/apisix_volume/apisix/dashboard_conf 定义 APISIX Dashboard 配置文件 apisix_home/apisix_volume/apisix/dashboard_conf/conf.yaml
conf: listen: # 绑定 IP 地址 host: 0.0.0.0 # 监听端口 port: 9000 etcd: # etcd 用户名 # username: &amp;#34;root&amp;#34; # etcd 密码 # password: &amp;#34;123456&amp;#34; # etcd 地址，支持集群多节点定义 endpoints: - apisix-etcd:2379 log: error_log: # 日志级别 debug, info, warn, error, panic, fatal level: warn # 日志输出路径 file_path: logs/error.</description></item></channel></rss>