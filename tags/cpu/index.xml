<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cpu on</title><link>https://coolbeevip.github.io/tags/cpu/</link><description>Recent content in cpu on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 07 Nov 2022 13:24:14 +0800</lastBuildDate><atom:link href="https://coolbeevip.github.io/tags/cpu/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux Command - Supervisory</title><link>https://coolbeevip.github.io/posts/linux/linux-collect-system/</link><pubDate>Mon, 07 Nov 2022 13:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/linux/linux-collect-system/</guid><description>定时收集当前用户的CPU和内存利用率 创建如下 user_usage.sh
#!/usr/bin/bash echo -e TIME\\tCPU%\\tMEM% while true do top -b -n 1 -u &amp;#34;$user&amp;#34; | awk -v user=&amp;#34;$user&amp;#34; -v date=&amp;#34;$(date &amp;#39;+%Y/%m/%d %H:%M:%S&amp;#39;)&amp;#34; &amp;#39;NR&amp;gt;7 { cpu_utilization_sum += $9; mem_utilization_sum += $10;} END { printf &amp;#34;%s\t%.2f\t%.2f\n&amp;#34;,date,cpu_utilization_sum,mem_utilization_sum; }&amp;#39; sleep $1 done 每 3 秒采集一次
sh user_usage.sh 3 TIME CPU% MEM% 2023/01/06 17:26:56 64.80 82.10 2023/01/06 17:26:57 70.60 82.10 2023/01/06 17:26:58 393.60 82.10 2023/01/06 17:26:59 137.50 82.20 定时收集某个进程的CPU和内存利用率 创建如下 proc_usage.sh
#!/usr/bin/bash echo proc $2 echo -e TIME\\tCPU%\\tMEM% while true do top -b -n 1 -p `ps -ef | grep $2 | grep -v grep | awk &amp;#39;{ print $2 }&amp;#39; | paste -s -d &amp;#39;,&amp;#39;` | awk -v user=&amp;#34;$user&amp;#34; -v date=&amp;#34;$(date &amp;#39;+%Y/%m/%d %H:%M:%S&amp;#39;)&amp;#34; &amp;#39;NR&amp;gt;7 { cpu_utilization_sum += $9; mem_utilization_sum += $10;} END { printf &amp;#34;%s\t%.</description></item><item><title>Linux Command - CPU</title><link>https://coolbeevip.github.io/posts/linux/linux-commands-cpu/</link><pubDate>Sun, 23 Oct 2022 13:24:14 +0800</pubDate><guid>https://coolbeevip.github.io/posts/linux/linux-commands-cpu/</guid><description>Linux CPU 相关命令
查看 CPU 信息 $ lscpu Architecture: x86_64 CPU op-mode(s): 32-bit, 64-bit Byte Order: Little Endian CPU(s): 4 On-line CPU(s) list: 0-3 Thread(s) per core: 1 Core(s) per socket: 1 Socket(s): 4 NUMA node(s): 1 Vendor ID: GenuineIntel CPU family: 6 Model: 85 Model name: Intel Xeon Processor (Skylake, IBRS) Stepping: 4 CPU MHz: 2299.996 BogoMIPS: 4599.99 Hypervisor vendor: KVM Virtualization type: full L1d cache: 32K L1i cache: 32K L2 cache: 4096K L3 cache: 16384K NUMA node0 CPU(s): 0-3 Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology eagerfpu pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 arat pku ospke spec_ctrl intel_stibp PI 值计算 $ time echo &amp;#34;scale=5000; 4*a(1)&amp;#34; | bc -l -q 7-Zip 基准测试 使用 7-Zip 自带的 LZMA 压缩基准测试测量 CPU 性能</description></item></channel></rss>